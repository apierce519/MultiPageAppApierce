// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MultiPageAppApierce.Models;

#nullable disable

namespace MultiPageAppApierce.Migrations.Country
{
    [DbContext(typeof(CountryContext))]
    [Migration("20230302022930_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MultiPageAppApierce.Models.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = "curling",
                            CategoryName = "Curling/Indoor"
                        },
                        new
                        {
                            CategoryId = "bobsleigh",
                            CategoryName = "Bobsleigh/Outdoor"
                        },
                        new
                        {
                            CategoryId = "diving",
                            CategoryName = "Diving/Indoor"
                        },
                        new
                        {
                            CategoryId = "roadCycle",
                            CategoryName = "Road Cycling/Outdoor"
                        },
                        new
                        {
                            CategoryId = "archery",
                            CategoryName = "Archery/Indoor"
                        },
                        new
                        {
                            CategoryId = "sprint",
                            CategoryName = "Sprint/Outdoor"
                        },
                        new
                        {
                            CategoryId = "breakdancing",
                            CategoryName = "Breakdancing/Indoor"
                        },
                        new
                        {
                            CategoryId = "skateboarding",
                            CategoryName = "Skateboarding/Outdoor"
                        });
                });

            modelBuilder.Entity("MultiPageAppApierce.Models.Country", b =>
                {
                    b.Property<string>("CountryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountryFlag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("GameId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = "can",
                            CategoryId = "curling",
                            CountryFlag = "CAN.png",
                            GameId = "winter",
                            Name = "Canada"
                        },
                        new
                        {
                            CountryId = "swe",
                            CategoryId = "curling",
                            CountryFlag = "SWE.png",
                            GameId = "winter",
                            Name = "Sweden"
                        },
                        new
                        {
                            CountryId = "gb",
                            CategoryId = "curling",
                            CountryFlag = "GB.png",
                            GameId = "winter",
                            Name = "Great Britain"
                        },
                        new
                        {
                            CountryId = "jam",
                            CategoryId = "bobsleigh",
                            CountryFlag = "JAM.png",
                            GameId = "winter",
                            Name = "Jamaica"
                        },
                        new
                        {
                            CountryId = "ita",
                            CategoryId = "bobsleigh",
                            CountryFlag = "ITA.png",
                            GameId = "winter",
                            Name = "Italy"
                        },
                        new
                        {
                            CountryId = "jap",
                            CategoryId = "bobsleigh",
                            CountryFlag = "JAP.png",
                            GameId = "winter",
                            Name = "Japan"
                        },
                        new
                        {
                            CountryId = "ger",
                            CategoryId = "diving",
                            CountryFlag = "GER.png",
                            GameId = "summer",
                            Name = "Germany"
                        },
                        new
                        {
                            CountryId = "chi",
                            CategoryId = "diving",
                            CountryFlag = "CHI.png",
                            GameId = "summer",
                            Name = "China"
                        },
                        new
                        {
                            CountryId = "mex",
                            CategoryId = "diving",
                            CountryFlag = "MEX.png",
                            GameId = "summer",
                            Name = "Mexico"
                        },
                        new
                        {
                            CountryId = "bra",
                            CategoryId = "roadCycle",
                            CountryFlag = "BRA.png",
                            GameId = "summer",
                            Name = "Brazil"
                        },
                        new
                        {
                            CountryId = "net",
                            CategoryId = "roadCycle",
                            CountryFlag = "NET.png",
                            GameId = "summer",
                            Name = "Netherlands"
                        },
                        new
                        {
                            CountryId = "usa",
                            CategoryId = "roadCycle",
                            CountryFlag = "USA.png",
                            GameId = "summer",
                            Name = "USA"
                        },
                        new
                        {
                            CountryId = "tha",
                            CategoryId = "archery",
                            CountryFlag = "THA.png",
                            GameId = "para",
                            Name = "Thailand"
                        },
                        new
                        {
                            CountryId = "uru",
                            CategoryId = "archery",
                            CountryFlag = "URU.png",
                            GameId = "para",
                            Name = "Uruguay"
                        },
                        new
                        {
                            CountryId = "ukr",
                            CategoryId = "archery",
                            CountryFlag = "UKR.png",
                            GameId = "para",
                            Name = "Ukraine"
                        },
                        new
                        {
                            CountryId = "aus",
                            CategoryId = "sprint",
                            CountryFlag = "AUS.png",
                            GameId = "para",
                            Name = "Austria"
                        },
                        new
                        {
                            CountryId = "pak",
                            CategoryId = "sprint",
                            CountryFlag = "PAK.png",
                            GameId = "para",
                            Name = "Pakistan"
                        },
                        new
                        {
                            CountryId = "zim",
                            CategoryId = "sprint",
                            CountryFlag = "ZIM.png",
                            GameId = "para",
                            Name = "Zimbabwe"
                        },
                        new
                        {
                            CountryId = "fra",
                            CategoryId = "breakdancing",
                            CountryFlag = "FRA.png",
                            GameId = "youth",
                            Name = "France"
                        },
                        new
                        {
                            CountryId = "zyp",
                            CategoryId = "breakdancing",
                            CountryFlag = "CYP.png",
                            GameId = "youth",
                            Name = "Cyprus"
                        },
                        new
                        {
                            CountryId = "rus",
                            CategoryId = "breakdancing",
                            CountryFlag = "RUS.png",
                            GameId = "youth",
                            Name = "Russia"
                        },
                        new
                        {
                            CountryId = "fin",
                            CategoryId = "skateboarding",
                            CountryFlag = "FIN.png",
                            GameId = "youth",
                            Name = "Finland"
                        },
                        new
                        {
                            CountryId = "slo",
                            CategoryId = "skateboarding",
                            CountryFlag = "SLO.png",
                            GameId = "youth",
                            Name = "Slovakia"
                        },
                        new
                        {
                            CountryId = "por",
                            CategoryId = "skateboarding",
                            CountryFlag = "POR.png",
                            GameId = "youth",
                            Name = "Portugal"
                        });
                });

            modelBuilder.Entity("MultiPageAppApierce.Models.Game", b =>
                {
                    b.Property<string>("GameId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameId = "winter",
                            GameName = "Winter Olympics"
                        },
                        new
                        {
                            GameId = "summer",
                            GameName = "Summer Olympics"
                        },
                        new
                        {
                            GameId = "para",
                            GameName = "Paralympics"
                        },
                        new
                        {
                            GameId = "youth",
                            GameName = "Youth Oliympic Games"
                        });
                });

            modelBuilder.Entity("MultiPageAppApierce.Models.Country", b =>
                {
                    b.HasOne("MultiPageAppApierce.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MultiPageAppApierce.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");

                    b.Navigation("Category");

                    b.Navigation("Game");
                });
#pragma warning restore 612, 618
        }
    }
}
